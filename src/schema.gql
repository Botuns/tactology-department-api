# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

input CreateDepartmentInput {
  name: String!
  subDepartments: [CreateSubDepartmentInput!]
}

input CreateSubDepartmentInput {
  name: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Department {
  createdAt: DateTime!
  id: ID!
  name: String!
  subDepartments: [SubDepartment!]
  updatedAt: DateTime!
}

input LoginInput {
  password: String!
  username: String!
}

type LoginResponse {
  accessToken: String!
  user: User!
}

type Mutation {
  createDepartment(input: CreateDepartmentInput!): Department!
  createSubDepartment(departmentId: ID!, input: CreateSubDepartmentInput!): SubDepartment!
  deleteDepartment(id: ID!): Boolean!
  deleteSubDepartment(id: ID!): Boolean!
  login(input: LoginInput!): LoginResponse!
  updateDepartment(input: UpdateDepartmentInput!): Department!
  updateSubDepartment(input: UpdateSubDepartmentInput!): SubDepartment!
}

type PaginatedDepartmentsResponse {
  items: [Department!]!
  skip: Int!
  take: Int!
  total: Int!
}

type Query {
  department(id: ID!): Department!
  departments(skip: Int! = 0, take: Int! = 10): [Department!]!
  paginatedDepartments(skip: Int! = 0, take: Int! = 10): PaginatedDepartmentsResponse!
  subDepartment(id: ID!): SubDepartment!
}

type SubDepartment {
  createdAt: DateTime!
  department: Department!
  id: ID!
  name: String!
  updatedAt: DateTime!
}

input UpdateDepartmentInput {
  id: Int!
  name: String!
}

input UpdateSubDepartmentInput {
  id: ID!
  name: String!
}

type User {
  id: ID!
  password: String!
  username: String!
}